{"version":3,"sources":["DemographicTableComponent/demographicTableComponent.js","UsersComponent/usersComponent.js","App.js","reportWebVitals.js","index.js"],"names":["DemographicTableComponent","props","getUsersAge","usersData","listOfItems","useState","type","setType","tableContent","setTableContent","className","placeholder","value","onChange","e","tableData","Object","values","filter","val","keys","includes","target","username","reduce","accumulator","currentValue","ageVal","age","count","map","item","index","UsersComponent","setUsersData","setUsersAge","useEffect","fetch","method","then","res","json","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA4DeA,EA1DmB,SAACC,GACjC,IAAQC,EAAwCD,EAAxCC,YAAaC,EAA2BF,EAA3BE,UAAWC,EAAgBH,EAAhBG,YAEhC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAqBA,OACE,sBAAKC,UAAU,kBAAf,UACE,kEACA,wBAAQC,YAAY,QAAQC,MAAON,EAAMO,SAvBrB,SAACC,GACvB,IAAMC,EAAYC,OAAOC,OACvBd,EACGe,QAAO,SAACC,GAAD,OACNH,OAAOI,KAAKlB,GACTgB,QAAO,SAACC,GAAD,OAASjB,EAAYiB,GAAKE,SAASP,EAAEQ,OAAOV,UACnDS,SAASF,EAAII,aAEjBC,QAAO,SAACC,EAAaC,GACpB,IAAMC,EAAM,UAAMD,EAAaE,KAI/B,OAHCH,EAAYE,GAERF,EAAYE,GAAQE,OAAS,EAD7BJ,EAAYE,GAAZ,2BAA2BD,GAA3B,IAAyCG,MAAO,IAE9CJ,IACN,KAEPhB,EAAgBM,GAChBR,EAAQO,EAAEQ,OAAOV,QAMf,SACGR,GACCA,EAAY0B,KAAI,SAACC,EAAMC,GAAP,OACd,wBAAQpB,MAAOmB,EAAKnB,MAApB,SACGmB,EAAKnB,OADwBoB,QAKtC,8BACE,gCACE,kCACE,+BACE,qCACA,0CAEDxB,GACCA,EAAasB,KAAI,SAACX,EAAKa,GACrB,OACE,+BACE,6BAAKb,EAAIS,MACT,6BAAKT,EAAIU,UAFFG,iBCmBZC,G,MA/DQ,SAAChC,GACtB,IAWA,EAAkCI,mBAAS,MAA3C,mBAAOF,EAAP,KAAkB+B,EAAlB,KACA,EAAmC7B,mBAAS,MAA5C,mBAAOH,EAAP,KAAoBiC,EAApB,KAaA,OAZAC,qBAAU,WACRC,MAAM,aAAc,CAClBC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASL,EAAYK,MAC7BH,MAAM,SAAU,CACdC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASN,EAAaM,QAC7B,IAED,gCACGrC,GAAaA,EAAUuC,QACtB,sBAAKhC,UAAU,kBAAf,UACE,gCACE,2CACA,wDAEF,kCACE,gCACE,+BACE,sCACA,0CAGHP,EAAU2B,KAAI,SAACX,EAAKa,GACnB,OACE,gCACE,+BACE,6BAAKb,EAAII,WACT,6BAAKJ,EAAIS,QAFFI,IADCA,YAWtB,cAAC,EAAD,CACE7B,UAAWA,EACXD,YAAaA,EACbE,YAxDc,CAClB,CAAEQ,MAAO,MACT,CAAEA,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,QACT,CAAEA,MAAO,eCFE+B,MATf,WAEG,OACC,qBAAKjC,UAAU,OAAf,SACE,cAAC,EAAD,OCKSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1a811ae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./demographicTableComponent.css\";\r\nconst DemographicTableComponent = (props) => {\r\n  const { getUsersAge, usersData, listOfItems } = props;\r\n\r\n  const [type, setType] = useState(\"\");\r\n  const [tableContent, setTableContent] = useState(null);\r\n  const onChangeOfValue = (e) => {\r\n    const tableData = Object.values(\r\n      usersData\r\n        .filter((val) =>\r\n          Object.keys(getUsersAge)\r\n            .filter((val) => getUsersAge[val].includes(e.target.value))\r\n            .includes(val.username)\r\n        )\r\n        .reduce((accumulator, currentValue) => {\r\n          const ageVal = `${currentValue.age}`;\r\n          !accumulator[ageVal]\r\n            ? (accumulator[ageVal] = { ...currentValue, count: 1 })\r\n            : (accumulator[ageVal].count += 1);\r\n          return accumulator;\r\n        }, {})\r\n    );\r\n    setTableContent(tableData);\r\n    setType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <h3>Age Demographic of Users with __</h3>\r\n      <select placeholder=\"users\" value={type} onChange={onChangeOfValue}>\r\n        {listOfItems &&\r\n          listOfItems.map((item, index) => (\r\n            <option value={item.value} key={index}>\r\n              {item.value}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>AGE</th>\r\n              <th>COUNT</th>\r\n            </tr>\r\n            {tableContent &&\r\n              tableContent.map((val, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{val.age}</td>\r\n                    <td>{val.count}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DemographicTableComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DemographicTableComponent from \"../DemographicTableComponent/demographicTableComponent\";\r\nimport \"./usersComponent.css\";\r\n\r\nconst UsersComponent = (props) => {\r\n  const listOfItems = [\r\n    { value: \"tv\" },\r\n    { value: \"crackers\" },\r\n    { value: \"chips\" },\r\n    { value: \"item \" },\r\n    { value: \"carrot\" },\r\n    { value: \"apple\" },\r\n    { value: \"grapes\" },\r\n    { value: \"cake\" },\r\n    { value: \"ham\" },\r\n  ];\r\n  const [usersData, setUsersData] = useState(null);\r\n  const [getUsersAge, setUsersAge] = useState(null);\r\n  useEffect(() => {\r\n    fetch(\"/users/age\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setUsersAge(res));\r\n    fetch(\"/users\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setUsersData(res));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {usersData && usersData.length && (\r\n        <div className='users-container'>\r\n          <div>\r\n            <h3>ALL USERS</h3>\r\n            <h5>Users and their age</h5>\r\n          </div>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>User</th>\r\n                <th>Age</th>\r\n              </tr>\r\n            </tbody>\r\n            {usersData.map((val, index) => {\r\n              return (\r\n                <tbody key={index}>\r\n                  <tr key={index}>\r\n                    <td>{val.username}</td>\r\n                    <td>{val.age}</td>\r\n                  </tr>\r\n                </tbody>\r\n              );\r\n            })}\r\n          </table>\r\n        </div>\r\n      )}\r\n      <DemographicTableComponent\r\n        usersData={usersData}\r\n        getUsersAge={getUsersAge}\r\n        listOfItems={listOfItems}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersComponent;\r\n","import './App.css';\nimport UsersComponent from './UsersComponent/usersComponent';\n\nfunction App() {\n\n   return(\n    <div className=\"main\">\n      <UsersComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}